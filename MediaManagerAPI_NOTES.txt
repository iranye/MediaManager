
Working from a json file PROBABLY won't work, work from a DB instead.

Use Fluent Validation
async Controller Actions

VolumesController needs POST,PUT,PATCH

Logging (i.e., ex.Message) to file + LogController (i.e., make logs available via API endpoint)

Implement Repository then query string logic: ?includeM3us=true



mediamanager-production.up.railway.app

public static class ConnectionHelper
{
	public static string GetConnectionString(IConfiguration configuration)
	{
		var connectionString = configuration.GetConnectionString("DefaultConnection");
		var databaseUrl = Environment.GetEnvironmentVariable("DATABASE_URL");
		return string.IsNullOrEmpty(databaseUrl) ? connectionString : BuildConnectionString(databaseUrl);
	}

	private static string BuildConnectionString(string databaseUrl)
	{
		var databaseUri = new Uri(databaseUrl);
		var userInfo = databaseUrl.UserInfo.Split(':');
		var builder = new NpgsqlConnectionStringBuilder
		{
			Host=databaseUri.Host,
			Port=databaseUri.Port,
			Username=userInfo[0],
			Password=userInfo[1],
			Database=databaseUri.LocalPath.TrimStart('/'),
			SslMode=SslMode.Require,
			TrustServerCertificate=true
		};
		return builder.ToString();
	}
}


public static class DataHelper
{
	public static async Task ManageDataAsync(IServiceProvider svcProvider)
	{
		var dbContextSvc = svcProvider.GetRequiredService<ApplicationDbContext>();

		// Migration: the programmatic equivalent to Update-Database
		await dbContextSvc.Database.MigrateAsync();
	}
}

//program.cs

var app = builder.Build();
var scope = app.Services.CreateScope();
await DataHelper.ManageDataAsync(scope.ServiceProvider);
