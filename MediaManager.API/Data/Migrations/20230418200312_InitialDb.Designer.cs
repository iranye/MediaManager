// <auto-generated />
using System;
using MediaManager.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaManager.API.Migrations
{
    [DbContext(typeof(MediaManagerContext))]
    [Migration("20230418200312_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MediaManager.API.Data.Entities.FileEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("M3uId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("M3uId");

                    b.ToTable("FileEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            M3uId = 1,
                            Name = "All of my love.mp3"
                        },
                        new
                        {
                            Id = 2,
                            M3uId = 1,
                            Name = "Rock and Roll All Nite.mp3"
                        },
                        new
                        {
                            Id = 3,
                            M3uId = 2,
                            Name = "Beat Box Extreme.mp3"
                        },
                        new
                        {
                            Id = 4,
                            M3uId = 3,
                            Name = "Lady in Red.mp3"
                        },
                        new
                        {
                            Id = 5,
                            M3uId = 3,
                            Name = "Back in the Saddle.mp3"
                        });
                });

            modelBuilder.Entity("MediaManager.API.Data.Entities.M3uFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalMegaBytes")
                        .HasColumnType("int");

                    b.Property<int>("VolumeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VolumeId");

                    b.ToTable("M3uFiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 4, 18, 16, 3, 12, 579, DateTimeKind.Local).AddTicks(4004),
                            Title = "ShaNaNa.m3u",
                            TotalMegaBytes = 42,
                            VolumeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 4, 18, 16, 3, 12, 579, DateTimeKind.Local).AddTicks(4008),
                            Title = "WakeAndBake.m3u",
                            TotalMegaBytes = 42,
                            VolumeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 4, 18, 16, 3, 12, 579, DateTimeKind.Local).AddTicks(4010),
                            Title = "BravenHearts.m3u",
                            TotalMegaBytes = 42,
                            VolumeId = 2
                        });
                });

            modelBuilder.Entity("MediaManager.API.Data.Entities.Volume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Moniker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Volumes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 4, 18, 16, 3, 12, 579, DateTimeKind.Local).AddTicks(3882),
                            Moniker = "kgon-01",
                            Title = "KGON-01"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 4, 18, 16, 3, 12, 579, DateTimeKind.Local).AddTicks(3918),
                            Moniker = "mellow-01",
                            Title = "Mellow-01"
                        });
                });

            modelBuilder.Entity("MediaManager.API.Data.Entities.FileEntry", b =>
                {
                    b.HasOne("MediaManager.API.Data.Entities.M3uFile", "M3uFile")
                        .WithMany("FilesInM3U")
                        .HasForeignKey("M3uId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("M3uFile");
                });

            modelBuilder.Entity("MediaManager.API.Data.Entities.M3uFile", b =>
                {
                    b.HasOne("MediaManager.API.Data.Entities.Volume", "Volume")
                        .WithMany("M3uFiles")
                        .HasForeignKey("VolumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("MediaManager.API.Data.Entities.M3uFile", b =>
                {
                    b.Navigation("FilesInM3U");
                });

            modelBuilder.Entity("MediaManager.API.Data.Entities.Volume", b =>
                {
                    b.Navigation("M3uFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
